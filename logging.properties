# A URL to the servlet that handles LogMgr registrations.  Registration
# is used to obtain configuration changes.
#logMgr.registry.url=http://rh-care-wps-da.shv.lsuhsc-s.edu/cfx/desktop/servlet/LogMgrRegistry

##### Typically the below parameters should rarely be modified. ###########
###########################################################################

# (Default 1000) Defines the maximum number of records that can be returned by
# a user query from the Log Viewer.  Note: the larger the value, the more 
# memory that the Log Viewer will consume on the server.
# logViewer.query.maxRows=1000

# (Default 60 sec - 1 minute) Defines how often (in sec) the Logger checks to see 
# if the configuration has changed.  The lowest allowable value is 1 second.
# logger.configCheckInterval=60

# Defines the level of internal logging.
# on - (default) log internal warnings and errors to stderr
# off - no internal messages are logged
# debug - internal debug messages are logged to stdout, warnings and errors logged to std err
# logger.internal.log=on

# Determines whether log messages should be written to log files using a human readable
# format or not. Take care in using the viewable setting.  Log files
# that are created using this setting can not be read by other processing programs.  This
# setting should only be used if it is not feasible to install a Log Mgr on a particular host.
# Values:
# nonviewable - (default) Messages are logged to log files in a format that works well for
# being processed by other programs, but is not easily readable by a user.
# viewable - Messages are logged in a user friendly format, allowing a user to
# use a text editor to view the log file.
logger.msg.format=viewable

# (Default 0) The port that the LogMgr will listen for requests on.  If the
# value is less than or equal to 0, then the LogMgr will use the next available
# port.
# logMgr.port=0

# (Default true) Determines whether the URL that is registered contains an I.P. address
# or host name, of the host that is running the LogMgr.  It is suggested that
# the I.P. address be used so that a name service does not need to be used
# on the server side.
# logMgr.use.ip=true

# (Default 100) New log records are inserted into the database using batch updates.  This
# parameter controls the number of sql statements that should be in a batch.
# logMgr.server.db.batchSize=100

# (Default 2000) When processing log files, this is the maximum number of records
# that will be commited to the database in one transaction.  Increasing this value
# may increase the amount of memory used by the Server Log Manager.
# logMgr.server.maxRecords=2000

# (Default 1) The number of threads to use to process log files.  Because each
# thread uses its own database connection, this also controls the number of concurrent 
# database connections.  More threads though will consume more CPU, so care should
# be taken when modifying this parameter.
# logMgr.server.numFileProcessorThreads=2

# (Default 100) The notification manager updates the database in batches.
# This is the number of sql statements to send in one batch.
# notificationMgr.db.batchSize=100

# (Default 2) The number of threads to use to actually send the email
# messages to users.
# notificationMgr.sender.emailerThreads=2

# (Default 5000) The maximum number of unprocessed log records to process
# at a time.  Note: the larger the value, the more memory that the Notification
# Manager will consume.
# notificationMgr.db.maxLogsPerRun=5000
